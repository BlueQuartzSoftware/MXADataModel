
#ifndef _@PROJECT_NAME@_IMPORT_DELEGATE_H_
#define _@PROJECT_NAME@_IMPORT_DELEGATE_H_


//-- MXA Includes
#include <Common/MXATypes.h>
#include <Common/MXATypeDefs.h>
#include <Base/IImportDelegate.h>
#include <DataImport/AbstractImportDelegateFactory.h>
#include <HDF5/H5Utilities.h>

// C++ STL headers
#include <string>
#include <iostream>


//-- Forward Declare the MXADataModel Class
class MXADataModel;

namespace @PROJECT_NAME@
{
/* Put properties in here */

  // YOU REALLY want to change this to something more useful for your situation/
//#warning Change the below line to something more useful then delete this line.
  const std::string FileExt("dat");
}

/**
 * @brief A generic Import Delegate that imports TIFF images into an HDF5 data file.
 * @author Mike Jackson
 * @date April 2007
 * @class @PROJECT_NAME@Delegate HDF5/@PROJECT_NAME@Delegate.h HDF5/@PROJECT_NAME@Delegate.h
 * @version $Revision: 1.2 $
 */
class @PROJECT_NAME@Delegate : public IImportDelegate
{
public:
  @PROJECT_NAME@Delegate();
  virtual ~@PROJECT_NAME@Delegate();

  /**
  * @brief Implementation from the IDataImportDelegate class
  */
  int32 importDataSource(IDataSourcePtr dataSource, IDataFilePtr dataFile);

  /**
  * @brief Sets a property of this class with the given value.
  * @param key The name of the property.
  * @param value  The value to set the property to.
  */
  virtual int32 setProperty(const std::string &key, const std::string &value);

  /**
  * @brief Sets a property of this class with the given value.
  * @param key The name of the property.
  * @param value  The value to store the property to.
  */
  virtual int32 getProperty(const std::string &key, std::string &value)
  {
    //TODO: You will need to implement this.
    return -1;
  }


private:

  @PROJECT_NAME@Delegate(const @PROJECT_NAME@Delegate&);   //Copy Constructor Not Implemented
  void operator=(const @PROJECT_NAME@Delegate&); //Copy Assignment Not Implemented
};


#endif /*_@PROJECT_NAME@_IMPORT_DELEGATE_H_*/
